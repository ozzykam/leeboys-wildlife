rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSignedIn() { 
      return request.auth != null; 
    }
    
    function isAdmin() { 
      return isSignedIn() && (
        request.auth.token.admin == true ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }
    
    function isOwner(uid) { 
      return isSignedIn() && request.auth.uid == uid; 
    }

    // Users collection
    match /users/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    // Customers collection - admin only
    match /customers/{customerId} {
      allow read, write: if isAdmin();
    }

    // Service requests - public create, admin manage
    match /serviceRequests/{requestId} {
      allow create: if true; // Public form submission
      allow read, update, delete: if isAdmin();
    }

    // Appointments - admin only
    match /appointments/{appointmentId} {
      allow read, write: if isAdmin();
    }

    // Work orders - admin only
    match /workOrders/{workOrderId} {
      allow read, write: if isAdmin();
    }

    // Invoices - admin or customer who owns it
    match /invoices/{invoiceId} {
      allow read: if isAdmin() || (isSignedIn() && resource.data.customerId == request.auth.uid);
      allow write: if isAdmin();
    }

    // Quotes - admin or customer who owns it
    match /quotes/{quoteId} {
      allow read: if isAdmin() || (isSignedIn() && resource.data.customerId == request.auth.uid);
      allow write: if isAdmin();
    }

    // Pending Accounts - admin create, limited read for activation
    match /pendingAccounts/{billingAccountNumber} {
      allow create: if isAdmin();
      allow read: if isAdmin() || (request.auth == null); // Allow unauthenticated read for activation
      allow update: if isAdmin() || 
                     (request.auth == null && resource.data.status == 'pending') || // Allow unauthenticated activation updates
                     (isSignedIn() && resource.data.status == 'pending' && request.resource.data.status == 'activated'); // Allow newly authenticated user to mark as activated
      allow delete: if isAdmin();
    }

    // Payments - admin only
    match /payments/{paymentId} {
      allow read, write: if isAdmin();
    }

    // Reviews - public create, admin manage
    match /reviews/{reviewId} {
      allow create: if isSignedIn();
      allow read: if true; // Public reviews
      allow update, delete: if isAdmin();
    }

    // Blog posts - public read if published, admin manage
    match /blogPosts/{postId} {
      allow read: if resource.data.published == true || isAdmin();
      allow write: if isAdmin();
    }

    // Routes - admin only
    match /routes/{routeId} {
      allow read, write: if isAdmin();
    }

    // Notifications - admin only
    match /notifications/{notificationId} {
      allow read, write: if isAdmin();
    }

    // App config - public read, admin write
    match /config/{configId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Default deny for all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}